Q: What does page 0 contain? What is in page 2?
A: By looking up `exec` code in exec.c, it turns out that page 0 contains text and data from executable. And page 2 should be the stack, while page 1 serves as guard page. But I have no idea why the guard page is valid.

Q: When running in user mode, could the process read/write the memory mapped by page 1?
A: Assuming that page 1 serves as a guard page, so in user mode, the process cannot read/write the memory mapped by page 1.

Q: Explain why the third test `srcva + len < srcva` is necessary in `copyin_new()`: give values for srcva and len for which the first two test fail (i.e., they will not cause to return -1) but for which the third one is true (resulting in returning -1).
A: Protection from overflow, I suppose.
